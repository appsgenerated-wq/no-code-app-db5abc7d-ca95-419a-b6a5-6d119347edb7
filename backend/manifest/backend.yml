name: FoodieApp
description: A platform for restaurant owners to manage their restaurants and menus.

entities:
  User:
    authenticable: true
    properties:
      - name
      - { name: email, type: email }
      - { name: role, type: choice, options: { values: [admin, owner], default: owner } }
    policies:
      create:
        - access: admin
      read:
        - { access: restricted, allow: User, condition: self }
      update:
        - { access: restricted, allow: User, condition: self }
      delete:
        - access: admin
      signup:
        - access: public

  Restaurant:
    properties:
      - { name: name, type: string, options: { required: true } }
      - { name: description, type: text }
      - { name: address, type: string }
      - { name: heroImage, type: image, options: { sizes: { thumbnail: { width: 400, height: 300 } } } }
    belongsTo:
      - { name: owner, entity: User }
    policies:
      create:
        - { access: restricted, allow: User }
      read:
        - access: public
      update:
        - { access: restricted, allow: User, condition: self }
      delete:
        - { access: restricted, allow: User, condition: self }

  MenuItem:
    properties:
      - { name: name, type: string, options: { required: true } }
      - { name: description, type: text }
      - { name: price, type: money, options: { currency: 'USD', required: true } }
      - { name: category, type: choice, options: { values: [Appetizer, Main, Dessert, Beverage], default: Main } }
      - { name: itemImage, type: image, options: { sizes: { thumbnail: { width: 200, height: 200 } } } }
    belongsTo:
      - { name: restaurant, entity: Restaurant }
      - { name: owner, entity: User }
    policies:
      create:
        - { access: restricted, allow: User }
      read:
        - access: public
      update:
        - { access: restricted, allow: User, condition: self }
      delete:
        - { access: restricted, allow: User, condition: self }


# Health check endpoint for connection testing
endpoints:
  healthCheck:
    path: /api/health
    method: GET
    handler: healthCheck
    policies: []  # Public access for health checks